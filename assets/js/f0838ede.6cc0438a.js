"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[15318],{12667:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=n(97458),r=n(16436);const s={},a=void 0,i={id:"auto-generated/previews/angular/button-grey-ghost.ts",title:"button-grey-ghost.ts",description:"\x3c!--",source:"@site/docs/auto-generated/previews/angular/button-grey-ghost.ts.md",sourceDirName:"auto-generated/previews/angular",slug:"/auto-generated/previews/angular/button-grey-ghost.ts",permalink:"/docs/auto-generated/previews/angular/button-grey-ghost.ts",draft:!1,unlisted:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/angular/button-grey-ghost.ts.md",tags:[],version:"current",frontMatter:{}},u={},c=[];function d(t){const e={code:"code",pre:"pre",...(0,r.a)(),...t.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-ts",children:'/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component } from \'@angular/core\';\n\n@Component({\n  selector: \'app-example\',\n  template: buttonGreyGhost(),\n})\nexport default class Buttons {}\nfunction buttonGreyGhost(): string \uff5c undefined {\n  return `\n      <ix-button class="m-1" ghost variant="secondary">\n        Button\n      </ix-button>\n      <ix-button class="m-1" disabled ghost variant="secondary">\n        Button\n      </ix-button>\n  `;\n}\n\n'})})}function l(t={}){const{wrapper:e}={...(0,r.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},16436:(t,e,n)=>{n.d(e,{Z:()=>i,a:()=>a});var o=n(52983);const r={},s=o.createContext(r);function a(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:a(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);