"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[70376],{37731:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var o=e(97458),r=e(16436);const s={},i=void 0,a={id:"auto-generated/previews/angular/button-text-icon.ts",title:"button-text-icon.ts",description:"\x3c!--",source:"@site/docs/auto-generated/previews/angular/button-text-icon.ts.md",sourceDirName:"auto-generated/previews/angular",slug:"/auto-generated/previews/angular/button-text-icon.ts",permalink:"/docs/auto-generated/previews/angular/button-text-icon.ts",draft:!1,unlisted:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/angular/button-text-icon.ts.md",tags:[],version:"current",frontMatter:{}},c={},u=[];function d(t){const n={code:"code",pre:"pre",...(0,r.a)(),...t.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component } from \'@angular/core\';\n\n@Component({\n  selector: \'app-example\',\n  template: buttonTextIcon(),\n})\nexport default class Buttons {}\nfunction buttonTextIcon(): string \uff5c undefined {\n  return `\n      <ix-button class="m-1" variant="primary" icon="star">\n        Button\n      </ix-button>\n      <ix-button class="m-1" variant="secondary" icon="star">\n        Button\n      </ix-button>\n      <ix-button class="m-1" outline icon="star">\n        Button\n      </ix-button>\n      <ix-button class="m-1" ghost icon="star">\n        Button\n      </ix-button>\n  `;\n}\n\n'})})}function l(t={}){const{wrapper:n}={...(0,r.a)(),...t.components};return n?(0,o.jsx)(n,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},16436:(t,n,e)=>{e.d(n,{Z:()=>a,a:()=>i});var o=e(52983);const r={},s=o.createContext(r);function i(t){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function a(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:i(t.components),o.createElement(s.Provider,{value:n},t.children)}}}]);