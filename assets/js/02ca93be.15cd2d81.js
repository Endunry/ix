"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[35169],{69031:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var i=t(97458),a=t(16436);const l={},r=void 0,o={id:"auto-generated/previews/react/blind-variants",title:"blind-variants",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/blind-variants.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/blind-variants",permalink:"/docs/auto-generated/previews/react/blind-variants",draft:!1,unlisted:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/blind-variants.md",tags:[],version:"current",frontMatter:{}},s={},c=[];function d(n){const e={code:"code",pre:"pre",...(0,a.a)(),...n.components};return(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-tsx",children:'/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { IxBlind } from \'@siemens/ix-react\';\nimport React from \'react\';\n\nexport default () => {\n  return (\n    <>\n      <IxBlind icon="bulb" label="Insight" sublabel="sublabel">\n        <div>Insight content</div>\n      </IxBlind>\n      <IxBlind\n        variant="outline"\n        icon="bulb"\n        label="Outline"\n        sublabel="sublabel"\n      >\n        <div>Outline content</div>\n      </IxBlind>\n      <IxBlind icon="bulb" variant={\'alarm\'} label="Alarm" sublabel="sublabel">\n        <div>Alarm content</div>\n      </IxBlind>\n      <IxBlind\n        icon="bulb"\n        variant={\'critical\'}\n        label="Critical"\n        sublabel="sublabel"\n      >\n        <div>Critical content</div>\n      </IxBlind>\n      <IxBlind\n        icon="bulb"\n        variant={\'warning\'}\n        label="Warning"\n        sublabel="sublabel"\n      >\n        <div>Warning content</div>\n      </IxBlind>\n      <IxBlind icon="bulb" variant={\'info\'} label="Info" sublabel="sublabel">\n        <div>Info content</div>\n      </IxBlind>\n      <IxBlind\n        icon="bulb"\n        variant={\'success\'}\n        label="Success"\n        sublabel="sublabel"\n      >\n        <div>Success content</div>\n      </IxBlind>\n      <IxBlind\n        icon="bulb"\n        variant={\'neutral\'}\n        label="Neutral"\n        sublabel="sublabel"\n      >\n        <div>Neutral content</div>\n      </IxBlind>\n    </>\n  );\n};\n\n'})})}function u(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},16436:(n,e,t)=>{t.d(e,{Z:()=>o,a:()=>r});var i=t(52983);const a={},l=i.createContext(a);function r(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);