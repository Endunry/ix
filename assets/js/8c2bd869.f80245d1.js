"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[28946],{96410:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var o=t(97458),a=t(16436);const r={},i=void 0,c={id:"auto-generated/previews/react/application-breakpoints",title:"application-breakpoints",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/application-breakpoints.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/application-breakpoints",permalink:"/docs/auto-generated/previews/react/application-breakpoints",draft:!1,unlisted:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/application-breakpoints.md",tags:[],version:"current",frontMatter:{}},s={},p=[];function l(n){const e={code:"code",pre:"pre",...(0,a.a)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-tsx",children:'/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Breakpoint } from \'@siemens/ix\';\nimport {\n  IxApplication,\n  IxApplicationHeader,\n  IxAvatar,\n  IxContent,\n  IxContentHeader,\n  IxDropdownButton,\n  IxDropdownItem,\n  IxIconButton,\n  IxMenu,\n  IxMenuItem,\n} from \'@siemens/ix-react\';\n\nimport React, { useState } from \'react\';\n\nexport default () => {\n  const [breakpoints, setBreakpoints] = useState<Breakpoint[]>([\'md\']);\n\n  return (\n    <IxApplication breakpoints={breakpoints}>\n      <IxApplicationHeader name="My Application">\n        <div className="placeholder-logo" slot="logo"></div>\n\n        <IxIconButton ghost icon="checkboxes"></IxIconButton>\n        <IxIconButton ghost icon="checkboxes"></IxIconButton>\n        <IxIconButton ghost icon="checkboxes"></IxIconButton>\n\n        <IxDropdownButton variant="secondary" label="Select config" ghost>\n          <IxDropdownItem label="Config 1"></IxDropdownItem>\n          <IxDropdownItem label="Config 2"></IxDropdownItem>\n          <IxDropdownItem label="Config 3"></IxDropdownItem>\n        </IxDropdownButton>\n\n        <IxAvatar>\n          <IxDropdownItem label="Action 1"></IxDropdownItem>\n          <IxDropdownItem label="Action 2"></IxDropdownItem>\n          <IxDropdownItem label="Action 3"></IxDropdownItem>\n        </IxAvatar>\n      </IxApplicationHeader>\n      <IxMenu>\n        <IxMenuItem>Item 1</IxMenuItem>\n        <IxMenuItem>Item 2</IxMenuItem>\n      </IxMenu>\n\n      <IxContent>\n        <IxContentHeader\n          slot="header"\n          header-title="Choose breakpoint"\n        ></IxContentHeader>\n        <input\n          id="small"\n          type="radio"\n          name="layout"\n          value="sm"\n          checked={breakpoints[0] === \'sm\'}\n          onChange={() => setBreakpoints([\'sm\'])}\n        />\n        <label htmlFor="small">Small</label>\n\n        <input\n          id="medium"\n          type="radio"\n          name="layout"\n          value="md"\n          checked={breakpoints[0] === \'md\'}\n          onChange={() => setBreakpoints([\'md\'])}\n        />\n        <label htmlFor="medium">Medium</label>\n\n        <input\n          id="large"\n          type="radio"\n          name="layout"\n          value="lg"\n          checked={breakpoints[0] === \'lg\'}\n          onChange={() => setBreakpoints([\'lg\'])}\n        />\n        <label htmlFor="large">Large</label>\n      </IxContent>\n    </IxApplication>\n  );\n};\n\n'})})}function d(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},16436:(n,e,t)=>{t.d(e,{Z:()=>c,a:()=>i});var o=t(52983);const a={},r=o.createContext(a);function i(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),o.createElement(r.Provider,{value:e},n.children)}}}]);