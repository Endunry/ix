"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[29763],{45576:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=n(97458),r=n(16436);const i={},s=void 0,c={id:"auto-generated/previews/react/tooltip",title:"tooltip",description:"\x3c!--",source:"@site/docs/auto-generated/previews/react/tooltip.md",sourceDirName:"auto-generated/previews/react",slug:"/auto-generated/previews/react/tooltip",permalink:"/docs/auto-generated/previews/react/tooltip",draft:!1,unlisted:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/react/tooltip.md",tags:[],version:"current",frontMatter:{}},a={},l=[];function u(e){const t={code:"code",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'/*\n * SPDX-FileCopyrightText: 2024 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { IxButton, IxTooltip } from \'@siemens/ix-react\';\nimport React from \'react\';\n\nexport default () => {\n  return (\n    <div style={{ padding: \'4rem\' }}>\n      <IxButton class="any-class" aria-describedby="tooltip-1">\n        Hover me\n      </IxButton>\n      <IxTooltip id="tooltip-1" for=".any-class">\n        Simple selector\n      </IxTooltip>\n\n      <IxButton\n        my-custom-special-selector="any-value"\n        aria-describedby="tooltip-2"\n      >\n        Also hover me\n      </IxButton>\n      <IxTooltip id="tooltip-2" for="[my-custom-special-selector=\'any-value\']">\n        Custom selector\n      </IxTooltip>\n    </div>\n  );\n};\n\n'})})}function d(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},16436:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>s});var o=n(52983);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);