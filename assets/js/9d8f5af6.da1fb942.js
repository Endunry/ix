"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[57335],{32698:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var o=n(97458),i=n(16436);const c={},r=void 0,a={id:"auto-generated/previews/angular/theme-switcher.html",title:"theme-switcher.html",description:"\x3c!--",source:"@site/docs/auto-generated/previews/angular/theme-switcher.html.md",sourceDirName:"auto-generated/previews/angular",slug:"/auto-generated/previews/angular/theme-switcher.html",permalink:"/docs/auto-generated/previews/angular/theme-switcher.html",draft:!1,unlisted:!1,editUrl:"https://www.github.com/siemens/ix/edit/main/packages/documentation/docs/auto-generated/previews/angular/theme-switcher.html.md",tags:[],version:"current",frontMatter:{}},s={},l=[];function m(e){const t={code:"code",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:'<ix-layout-grid>\n  <ix-row>\n    <ix-col size="2">\n      <span>Light/Dark</span>\n    </ix-col>\n    <ix-col>\n      <ix-button (click)="toggleMode()">Toggle mode</ix-button>\n    </ix-col>\n  </ix-row>\n\n  <ix-row>\n    <ix-col size="2">Theme</ix-col>\n    <ix-col>\n      <ix-select\n        [value]="selectedTheme"\n        (itemSelectionChange)="onItemSelectionChange($event)"\n        placeholder="Select a theme"\n      >\n        <ix-select-item\n          *ngFor="let theme of themes"\n          [label]="theme"\n          [value]="theme"\n        ></ix-select-item>\n      </ix-select>\n    </ix-col>\n  </ix-row>\n\n  <ix-row>\n    <ix-col size="2">Use System</ix-col>\n    <ix-col>\n      <input type="checkbox" id="system" (change)="onSystemMode($event)" />\n      <label for="system"></label>\n    </ix-col>\n  </ix-row>\n</ix-layout-grid>\n\n'})})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},16436:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var o=n(52983);const i={},c=o.createContext(i);function r(e){const t=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(c.Provider,{value:t},e.children)}}}]);